// <auto-generated />
using System;
using MerryClosets.Repositories.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MerryClosets.Migrations
{
    [DbContext(typeof(MerryClosetsContext))]
    [Migration("20181108231333_MigrationDeployment")]
    partial class MigrationDeployment
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MerryClosets.Models.Category.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<string>("ParentCategoryReference");

                    b.Property<string>("Reference");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("MerryClosets.Models.Collection.Catalog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<string>("Reference");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.ToTable("Catalogs");
                });

            modelBuilder.Entity("MerryClosets.Models.Collection.Collection", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<string>("Reference");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.ToTable("Collections");
                });

            modelBuilder.Entity("MerryClosets.Models.Collection.ProductCollection", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CollectionId");

                    b.Property<string>("CollectionReference");

                    b.Property<string>("ConfiguredProductReference");

                    b.Property<long?>("ProductCollectionCatalogId");

                    b.HasKey("Id");

                    b.HasIndex("CollectionId");

                    b.HasIndex("ProductCollectionCatalogId");

                    b.ToTable("ProductCollection");
                });

            modelBuilder.Entity("MerryClosets.Models.Collection.ProductCollectionCatalog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CatalogId");

                    b.Property<string>("CatalogReference");

                    b.HasKey("Id");

                    b.HasIndex("CatalogId");

                    b.ToTable("ProductCollectionCatalog");
                });

            modelBuilder.Entity("MerryClosets.Models.ConfiguredProduct.ConfiguredDimension", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Depth");

                    b.Property<int>("Height");

                    b.Property<int>("Width");

                    b.HasKey("Id");

                    b.ToTable("ConfiguredDimension");
                });

            modelBuilder.Entity("MerryClosets.Models.ConfiguredProduct.ConfiguredMaterial", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ColorReference");

                    b.Property<string>("FinishReference");

                    b.Property<string>("OriginMaterialReference");

                    b.HasKey("Id");

                    b.ToTable("ConfiguredMaterial");
                });

            modelBuilder.Entity("MerryClosets.Models.ConfiguredProduct.ConfiguredPart", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChosenSlotReference");

                    b.Property<string>("ConfiguredChildReference");

                    b.Property<long?>("ConfiguredProductId");

                    b.HasKey("Id");

                    b.HasIndex("ConfiguredProductId");

                    b.ToTable("ConfiguredPart");
                });

            modelBuilder.Entity("MerryClosets.Models.ConfiguredProduct.ConfiguredProduct", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ConfiguredDimensionId");

                    b.Property<long?>("ConfiguredMaterialId");

                    b.Property<bool>("IsActive");

                    b.Property<long?>("PriceId");

                    b.Property<string>("ProductReference");

                    b.Property<string>("Reference");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("ConfiguredDimensionId");

                    b.HasIndex("ConfiguredMaterialId");

                    b.HasIndex("PriceId");

                    b.ToTable("ConfiguredProducts");
                });

            modelBuilder.Entity("MerryClosets.Models.ConfiguredProduct.ConfiguredSlot", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ConfiguredProductId");

                    b.Property<string>("Reference");

                    b.Property<int>("Size");

                    b.HasKey("Id");

                    b.HasIndex("ConfiguredProductId");

                    b.ToTable("ConfiguredSlot");
                });

            modelBuilder.Entity("MerryClosets.Models.Material.Color", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("MaterialId");

                    b.Property<string>("Name");

                    b.Property<string>("Reference");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.ToTable("Color");
                });

            modelBuilder.Entity("MerryClosets.Models.Material.Finish", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<long?>("MaterialId");

                    b.Property<string>("Name");

                    b.Property<long?>("PriceId");

                    b.Property<string>("Reference");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("PriceId");

                    b.ToTable("Finish");
                });

            modelBuilder.Entity("MerryClosets.Models.Material.Material", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<long?>("PriceId");

                    b.Property<string>("Reference");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("PriceId");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("MerryClosets.Models.Material.MaterialProduct", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MaterialReference");

                    b.Property<long?>("ProductId");

                    b.Property<string>("ProductReference");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("MaterialProduct");
                });

            modelBuilder.Entity("MerryClosets.Models.Product.DimensionValues", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ProductId");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("DimensionValues");
                });

            modelBuilder.Entity("MerryClosets.Models.Product.Part", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ProductId");

                    b.Property<string>("ProductReference");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Part");
                });

            modelBuilder.Entity("MerryClosets.Models.Product.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryReference");

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<long?>("PriceId");

                    b.Property<string>("Reference");

                    b.Property<long?>("SlotDefinitionId");

                    b.Property<long>("Version");

                    b.HasKey("Id");

                    b.HasIndex("PriceId");

                    b.HasIndex("SlotDefinitionId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("MerryClosets.Models.Product.Values", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("DimensionValuesId");

                    b.Property<long?>("DimensionValuesId1");

                    b.Property<long?>("DimensionValuesId2");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("DimensionValuesId");

                    b.HasIndex("DimensionValuesId1");

                    b.HasIndex("DimensionValuesId2");

                    b.ToTable("Values");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Values");
                });

            modelBuilder.Entity("MerryClosets.Models.Restriction.DimensionAlgorithm", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("DimensionValuesId");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("DimensionValuesId");

                    b.ToTable("DimensionAlgorithm");

                    b.HasDiscriminator<string>("Discriminator").HasValue("DimensionAlgorithm");
                });

            modelBuilder.Entity("MerryClosets.Models.Restriction.MaterialAlgorithm", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("MaterialProductId");

                    b.HasKey("Id");

                    b.HasIndex("MaterialProductId");

                    b.ToTable("MaterialAlgorithm");
                });

            modelBuilder.Entity("MerryClosets.Models.Restriction.PartAlgorithm", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<long?>("PartId");

                    b.HasKey("Id");

                    b.HasIndex("PartId");

                    b.ToTable("PartAlgorithm");

                    b.HasDiscriminator<string>("Discriminator").HasValue("PartAlgorithm");
                });

            modelBuilder.Entity("Price", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Value");

                    b.HasKey("Id");

                    b.ToTable("Price");
                });

            modelBuilder.Entity("SlotDefinition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MaxSize");

                    b.Property<int>("MinSize");

                    b.HasKey("Id");

                    b.ToTable("SlotDefinition");
                });

            modelBuilder.Entity("MerryClosets.Models.Product.ContinuousValue", b =>
                {
                    b.HasBaseType("MerryClosets.Models.Product.Values");

                    b.Property<int>("MaxValue");

                    b.Property<int>("MinValue");

                    b.ToTable("ContinuousValue");

                    b.HasDiscriminator().HasValue("ContinuousValue");
                });

            modelBuilder.Entity("MerryClosets.Models.Product.DiscreteValue", b =>
                {
                    b.HasBaseType("MerryClosets.Models.Product.Values");

                    b.Property<int>("Value");

                    b.ToTable("DiscreteValue");

                    b.HasDiscriminator().HasValue("DiscreteValue");
                });

            modelBuilder.Entity("MerryClosets.Models.Restriction.RatioAlgorithm", b =>
                {
                    b.HasBaseType("MerryClosets.Models.Restriction.DimensionAlgorithm");

                    b.Property<string>("FirstValueDesc");

                    b.Property<string>("Operator");

                    b.Property<float>("Ratio");

                    b.Property<string>("SecondValueDesc");

                    b.ToTable("RatioAlgorithm");

                    b.HasDiscriminator().HasValue("RatioAlgorithm");
                });

            modelBuilder.Entity("MerryClosets.Models.Restriction.MaterialFinishPartAlgorithm", b =>
                {
                    b.HasBaseType("MerryClosets.Models.Restriction.PartAlgorithm");


                    b.ToTable("MaterialFinishPartAlgorithm");

                    b.HasDiscriminator().HasValue("MaterialFinishPartAlgorithm");
                });

            modelBuilder.Entity("MerryClosets.Models.Restriction.MaterialPartAlgorithm", b =>
                {
                    b.HasBaseType("MerryClosets.Models.Restriction.PartAlgorithm");


                    b.ToTable("MaterialPartAlgorithm");

                    b.HasDiscriminator().HasValue("MaterialPartAlgorithm");
                });

            modelBuilder.Entity("MerryClosets.Models.Restriction.SizePercentagePartAlgorithm", b =>
                {
                    b.HasBaseType("MerryClosets.Models.Restriction.PartAlgorithm");


                    b.ToTable("SizePercentagePartAlgorithm");

                    b.HasDiscriminator().HasValue("SizePercentagePartAlgorithm");
                });

            modelBuilder.Entity("MerryClosets.Models.Collection.ProductCollection", b =>
                {
                    b.HasOne("MerryClosets.Models.Collection.Collection")
                        .WithMany("ProductCollection")
                        .HasForeignKey("CollectionId");

                    b.HasOne("MerryClosets.Models.Collection.ProductCollectionCatalog")
                        .WithMany("Products")
                        .HasForeignKey("ProductCollectionCatalogId");
                });

            modelBuilder.Entity("MerryClosets.Models.Collection.ProductCollectionCatalog", b =>
                {
                    b.HasOne("MerryClosets.Models.Collection.Catalog")
                        .WithMany("Collections")
                        .HasForeignKey("CatalogId");
                });

            modelBuilder.Entity("MerryClosets.Models.ConfiguredProduct.ConfiguredPart", b =>
                {
                    b.HasOne("MerryClosets.Models.ConfiguredProduct.ConfiguredProduct")
                        .WithMany("Parts")
                        .HasForeignKey("ConfiguredProductId");
                });

            modelBuilder.Entity("MerryClosets.Models.ConfiguredProduct.ConfiguredProduct", b =>
                {
                    b.HasOne("MerryClosets.Models.ConfiguredProduct.ConfiguredDimension", "ConfiguredDimension")
                        .WithMany()
                        .HasForeignKey("ConfiguredDimensionId");

                    b.HasOne("MerryClosets.Models.ConfiguredProduct.ConfiguredMaterial", "ConfiguredMaterial")
                        .WithMany()
                        .HasForeignKey("ConfiguredMaterialId");

                    b.HasOne("Price", "Price")
                        .WithMany()
                        .HasForeignKey("PriceId");
                });

            modelBuilder.Entity("MerryClosets.Models.ConfiguredProduct.ConfiguredSlot", b =>
                {
                    b.HasOne("MerryClosets.Models.ConfiguredProduct.ConfiguredProduct")
                        .WithMany("ConfiguredSlots")
                        .HasForeignKey("ConfiguredProductId");
                });

            modelBuilder.Entity("MerryClosets.Models.Material.Color", b =>
                {
                    b.HasOne("MerryClosets.Models.Material.Material")
                        .WithMany("Colors")
                        .HasForeignKey("MaterialId");
                });

            modelBuilder.Entity("MerryClosets.Models.Material.Finish", b =>
                {
                    b.HasOne("MerryClosets.Models.Material.Material")
                        .WithMany("Finishes")
                        .HasForeignKey("MaterialId");

                    b.HasOne("Price", "Price")
                        .WithMany()
                        .HasForeignKey("PriceId");
                });

            modelBuilder.Entity("MerryClosets.Models.Material.Material", b =>
                {
                    b.HasOne("Price", "Price")
                        .WithMany()
                        .HasForeignKey("PriceId");
                });

            modelBuilder.Entity("MerryClosets.Models.Material.MaterialProduct", b =>
                {
                    b.HasOne("MerryClosets.Models.Product.Product")
                        .WithMany("MaterialsOfProduct")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("MerryClosets.Models.Product.DimensionValues", b =>
                {
                    b.HasOne("MerryClosets.Models.Product.Product")
                        .WithMany("Dimensions")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("MerryClosets.Models.Product.Part", b =>
                {
                    b.HasOne("MerryClosets.Models.Product.Product")
                        .WithMany("Parts")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("MerryClosets.Models.Product.Product", b =>
                {
                    b.HasOne("Price", "Price")
                        .WithMany()
                        .HasForeignKey("PriceId");

                    b.HasOne("SlotDefinition", "SlotDefinition")
                        .WithMany()
                        .HasForeignKey("SlotDefinitionId");
                });

            modelBuilder.Entity("MerryClosets.Models.Product.Values", b =>
                {
                    b.HasOne("MerryClosets.Models.Product.DimensionValues")
                        .WithMany("PossibleDepths")
                        .HasForeignKey("DimensionValuesId");

                    b.HasOne("MerryClosets.Models.Product.DimensionValues")
                        .WithMany("PossibleHeights")
                        .HasForeignKey("DimensionValuesId1");

                    b.HasOne("MerryClosets.Models.Product.DimensionValues")
                        .WithMany("PossibleWidths")
                        .HasForeignKey("DimensionValuesId2");
                });

            modelBuilder.Entity("MerryClosets.Models.Restriction.DimensionAlgorithm", b =>
                {
                    b.HasOne("MerryClosets.Models.Product.DimensionValues")
                        .WithMany("Restrictions")
                        .HasForeignKey("DimensionValuesId");
                });

            modelBuilder.Entity("MerryClosets.Models.Restriction.MaterialAlgorithm", b =>
                {
                    b.HasOne("MerryClosets.Models.Material.MaterialProduct")
                        .WithMany("Restrictions")
                        .HasForeignKey("MaterialProductId");
                });

            modelBuilder.Entity("MerryClosets.Models.Restriction.PartAlgorithm", b =>
                {
                    b.HasOne("MerryClosets.Models.Product.Part")
                        .WithMany("Restrictions")
                        .HasForeignKey("PartId");
                });
#pragma warning restore 612, 618
        }
    }
}
